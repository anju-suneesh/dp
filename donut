import * as d3 from 'd3';

const width = 500;
const height = 500;
const margin = 30;
const colors = ['#5687d1', '#5c7b61', '#de783b', '#6ab975', '#a173d1'];

export const donutSetUp = (svgRef, data) => {

    
    d3.selectAll("g").remove();
    
    let radius = Math.min(width, height) / 2 - margin;

    let lengPosition = d3.arc().innerRadius(radius / 1.75).outerRadius(radius);

    const svg = d3.select(svgRef.current)
        .attr("width", '100%')
        .attr("height", '100%')
        .attr("viewBox", '0 0 ' + width + ' ' + width)
        .append("g")
        .attr("transform", "translate(" + Math.min(width, height) / 2 + "," + Math.min(width, height) / 2 + ")");

        
    
    let pie = d3.pie().value(d => d.value);
    
    let donutData = pie(data);
    

    svg.selectAll('whatever')
        .data(donutData)
        .enter()
        .append('path')
        .attr('d', lengPosition)
        .attr('fill', (d) => colors[d.index])
        .attr('stroke', "#fff")
        .style('stroke-width', "2")
        .style('opacity', '0.8');

    

    svg.selectAll('whatever')
        .data(donutData)
        .enter()
        .append('g')
        .attr("transform", d => `translate(${lengPosition.centroid(d)})`)
        .attr("class", 'legend-g')
        .style("user-select", "none")
        .append('text')
        .text(d => d.data.value)
        .style("text-anchor", "middle")
        .style("font-weight", 700)
        .style("fill", "#222")
        .style("font-size", 14);

    svg.selectAll('.legend-g')
        .append('text')
        .text((d) => { return d.data.name })
        .style("fill", "#444")
        .style("font-size", 12)
        .style("text-anchor", "middle")
        .attr("y", 16);

}
